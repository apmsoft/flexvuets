ES6+, TypeScript, Tailwind CSS

http://flexvue.fancyupsoft.com


# TypeScript install
npm install -D typescript
npx tsc --init

npm install --save-dev @types/node
npm install --save-dev babel-plugin-module-resolver
npm install --save-dev @babel/cli
npm install --save-dev @types/jquery

# tailwind css install
https://tailwindcss.com/docs/installation

npm install -D tailwindcss postcss autoprefixer
npx tailwindcss init
npm install -D @tailwindcss/forms
npm install -D @tailwindcss/aspect-ratio

# tsconfig.json
{
  "compilerOptions": {
    "target": "es6",
    "lib": [
      "dom",
      "dom.iterable",
      "esnext"
    ],
    "allowJs": true,
    "checkJs": false,
    "skipLibCheck": true,
    "strict": true,
    "forceConsistentCasingInFileNames": true,
    "noFallthroughCasesInSwitch": true,
    "esModuleInterop": true,
    "allowSyntheticDefaultImports": true,
    "moduleResolution": "node",
    "resolveJsonModule": true,
    "isolatedModules": false,
    "strictNullChecks": true,
    "noImplicitAny" : false,
    "module": "ESNext",
    "outDir": "debug",
    "rootDir": "src",
    "types": ["node", "jquery"],
  },
  "include": [
    "src/**/*",
    "global.d.ts"
  ],
  "exclude": [
    "node_modules","**/*.spec.ts"
  ],
  "extends": "./tsconfig.paths.json",
}

>> babel
.babelrc
{
  "plugins": [
    [ "module-resolver", {
        "alias": {
          "src": "./debug"
          ,"@flexvue":"./debug/flexvue"
        }
      }
    ]
  ]
}

>> tsconfig.paths.json
{
  "compilerOptions": {
      "baseUrl": ".",
      "paths" : {
          "src/*": ["src/*"],
          "@flexvue/*": ["src/flexvue/*"],
      }
  }
}


# 파일 하나씩 또는 디렉토리 단위로
tsc src/flexvue/flexvue.ts -outFile ./dist/flexvue/flexvue.js
tsc src/flexvue/flexvue.ts -outDir ./dist/flexvue/

# nodejs build setting
>> package.json
{
  "name": "flexvue",
  "version": "3.0",
  "description": "",
  "main": "index.js",
  "scripts": {
    "build": "tsc -P ./tsconfig.json && babel debug -d debug",
    "start": "tsc -P ./tsconfig.json --watch && babel debug --out-dir debug --watch",
    "release": "cp -fr ./debug/* ./release/v1",
    "clean": "tsc --build --clean",
    "clean_release": "rm -fr ./release/v1/*",
    "css": "npx tailwindcss -i ./tailwind.css -o ./debug/css/tailwind.css --watch --minify"
  },
  "author": "fancyupsoft.com",
  "license": "ISC",
  "dependencies": {
    "typescript": "^4.5.5"
  },
  "devDependencies": {
    "ts-node": "^10.5.0"
  }
}

>> npm run build
>> npm run clean

>> npm run release
>> npm run clean_release

# editorjs : https://editorjs.io/getting-started/
# plugins : https://github.com/orgs/editor-js/repositories?type=all
npm i @editorjs/editorjs --save

npm install --save-dev @editorjs/simple-image
npm install --save-dev @editorjs/header
npm install --save-dev @editorjs/table
npm install --save-dev @editorjs/link
npm install --save-dev @editorjs/image

npm install --save-dev @editorjs/raw
npm install --save-dev @editorjs/checklist
npm install --save-dev @editorjs/list
npm install --save-dev @editorjs/embed
npm install --save-dev @editorjs/quote
npm install --save-dev @editorjs/code