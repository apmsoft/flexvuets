{"version":3,"file":"cropperjs.js","names":["Cropper","onReady","image","document","querySelector","minAspectRatio","maxAspectRatio","cropper","aspectRatio","autoCropArea","dragMode","highlight","viewMode","restore","cropBoxMovable","cropBoxResizable","zoomable","zoomOnWheel","ready","containerData","getContainerData","cropBoxData","getCropBoxData","width","height","newCropBoxWidth","setCropBoxData","left","top","cropmove","button","getElementById","result","onclick","innerHTML","imgUrl","getCroppedCanvas","toDataURL","img","createElement","src","appendChild","addEventListener"],"sources":["cropperjs.js"],"sourcesContent":["import Cropper from '@flexvue/plugins/cropper/cropper.esm.min.js';\nconst onReady = () => {\n    const image = document.querySelector('#image');\n    //     const cropper = new Cropper(image, {\n    //         dragMode: 'move',\n    //         aspectRatio: 1 / 1,\n    //         autoCropArea: [\"40px\",\"40px\"],\n    //         // autoCropArea: 1,\n    //         restore: true,\n    //         guides: false,\n    //         center: false,\n    //         highlight: false,\n    //         cropBoxMovable: false,\n    //         cropBoxResizable: true,\n    //         toggleDragModeOnDblclick: false,\n    //         viewMode: 1,\n    //         zoom : false,\n    //         ready: function () {\n    //             // cropbox reset\n    //             // cropper.setCropBoxData({left: ((500-400)/2), top: ((700-400)/2), width:400, height:400});\n    //             cropper.setCropBoxData({top: ((700-500)/2)});\n    //         },\n    //     });\n    const minAspectRatio = 0.5;\n    const maxAspectRatio = 1.5;\n    const cropper = new Cropper(image, {\n        aspectRatio: 1 / 1,\n        autoCropArea: 1,\n        dragMode: 'move',\n        highlight: false,\n        viewMode: 1,\n        restore: true,\n        cropBoxMovable: true,\n        cropBoxResizable: true,\n        zoomable: false,\n        zoomOnWheel: false,\n        ready: function () {\n            var cropper = this.cropper;\n            var containerData = cropper.getContainerData();\n            var cropBoxData = cropper.getCropBoxData();\n            var aspectRatio = cropBoxData.width / cropBoxData.height;\n            var newCropBoxWidth;\n            // if (aspectRatio < minAspectRatio || aspectRatio > maxAspectRatio) {\n            // newCropBoxWidth = cropBoxData.height * ((minAspectRatio + maxAspectRatio) / 2);\n            cropper.setCropBoxData({\n                left: (containerData.width - newCropBoxWidth) / 2,\n                top: 40,\n                width: newCropBoxWidth\n            });\n            // }\n        },\n        cropmove: function () {\n            var cropper = this.cropper;\n            var cropBoxData = cropper.getCropBoxData();\n            var aspectRatio = cropBoxData.width / cropBoxData.height;\n            if (aspectRatio < minAspectRatio) {\n                cropper.setCropBoxData({\n                    width: cropBoxData.height * minAspectRatio\n                });\n            }\n            else if (aspectRatio > maxAspectRatio) {\n                cropper.setCropBoxData({\n                    width: cropBoxData.height * maxAspectRatio\n                });\n            }\n        },\n    });\n    const button = document.getElementById('button');\n    const result = document.getElementById('result');\n    button.onclick = function () {\n        result.innerHTML = '';\n        // result.appendChild(cropper.getCroppedCanvas());\n        var imgUrl = cropper.getCroppedCanvas({ width: 1000, height: 1000 }).toDataURL();\n        var img = document.createElement(\"img\");\n        img.src = imgUrl;\n        result.appendChild(img);\n    };\n};\n// document ready\ndocument.addEventListener(\"DOMContentLoaded\", onReady);\n"],"mappings":"AAAA,OAAOA,OAAO;AACd,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAClB,MAAMC,KAAK,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;EAC9C;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,MAAMC,cAAc,GAAG,GAAG;EAC1B,MAAMC,cAAc,GAAG,GAAG;EAC1B,MAAMC,OAAO,GAAG,IAAIP,OAAO,CAACE,KAAK,EAAE;IAC/BM,WAAW,EAAE,CAAC,GAAG,CAAC;IAClBC,YAAY,EAAE,CAAC;IACfC,QAAQ,EAAE,MAAM;IAChBC,SAAS,EAAE,KAAK;IAChBC,QAAQ,EAAE,CAAC;IACXC,OAAO,EAAE,IAAI;IACbC,cAAc,EAAE,IAAI;IACpBC,gBAAgB,EAAE,IAAI;IACtBC,QAAQ,EAAE,KAAK;IACfC,WAAW,EAAE,KAAK;IAClBC,KAAK,EAAE,SAAAA,CAAA,EAAY;MACf,IAAIX,OAAO,GAAG,IAAI,CAACA,OAAO;MAC1B,IAAIY,aAAa,GAAGZ,OAAO,CAACa,gBAAgB,CAAC,CAAC;MAC9C,IAAIC,WAAW,GAAGd,OAAO,CAACe,cAAc,CAAC,CAAC;MAC1C,IAAId,WAAW,GAAGa,WAAW,CAACE,KAAK,GAAGF,WAAW,CAACG,MAAM;MACxD,IAAIC,eAAe;MACnB;MACA;MACAlB,OAAO,CAACmB,cAAc,CAAC;QACnBC,IAAI,EAAE,CAACR,aAAa,CAACI,KAAK,GAAGE,eAAe,IAAI,CAAC;QACjDG,GAAG,EAAE,EAAE;QACPL,KAAK,EAAEE;MACX,CAAC,CAAC;MACF;IACJ,CAAC;IACDI,QAAQ,EAAE,SAAAA,CAAA,EAAY;MAClB,IAAItB,OAAO,GAAG,IAAI,CAACA,OAAO;MAC1B,IAAIc,WAAW,GAAGd,OAAO,CAACe,cAAc,CAAC,CAAC;MAC1C,IAAId,WAAW,GAAGa,WAAW,CAACE,KAAK,GAAGF,WAAW,CAACG,MAAM;MACxD,IAAIhB,WAAW,GAAGH,cAAc,EAAE;QAC9BE,OAAO,CAACmB,cAAc,CAAC;UACnBH,KAAK,EAAEF,WAAW,CAACG,MAAM,GAAGnB;QAChC,CAAC,CAAC;MACN,CAAC;MACI,IAAIG,WAAW,GAAGF,cAAc,EAAE;QACnCC,OAAO,CAACmB,cAAc,CAAC;UACnBH,KAAK,EAAEF,WAAW,CAACG,MAAM,GAAGlB;QAChC,CAAC,CAAC;MACN;IACJ;EACJ,CAAC,CAAC;EACF,MAAMwB,MAAM,GAAG3B,QAAQ,CAAC4B,cAAc,CAAC,QAAQ,CAAC;EAChD,MAAMC,MAAM,GAAG7B,QAAQ,CAAC4B,cAAc,CAAC,QAAQ,CAAC;EAChDD,MAAM,CAACG,OAAO,GAAG,YAAY;IACzBD,MAAM,CAACE,SAAS,GAAG,EAAE;IACrB;IACA,IAAIC,MAAM,GAAG5B,OAAO,CAAC6B,gBAAgB,CAAC,EAAEb,KAAK,EAAE,IAAI,EAAEC,MAAM,EAAE,IAAI,CAAC,CAAC,CAAC,CAACa,SAAS,CAAC,CAAC;IAChF,IAAIC,GAAG,GAAGnC,QAAQ,CAACoC,aAAa,CAAC,KAAK,CAAC;IACvCD,GAAG,CAACE,GAAG,GAAGL,MAAM;IAChBH,MAAM,CAACS,WAAW,CAACH,GAAG,CAAC;EAC3B,CAAC;AACL,CAAC;AACD;AACAnC,QAAQ,CAACuC,gBAAgB,CAAC,kBAAkB,EAAEzC,OAAO,CAAC","ignoreList":[]}