{"version":3,"file":"interpreter.js","names":["util","interpreter","bindings","event","state","evType","normalizeEvent","type","events","inputs","map","input","current","candidates","reduce","accumulator","binding","data","gesture","element","push"],"sources":["interpreter.js"],"sourcesContent":["/**\n * @file interpreter.js\n * Contains logic for the interpreter\n */\nimport util from './util.js';\n/**\n * Receives an event and an array of Bindings (element -> gesture handler)\n * to determine what event will be emitted. Called from the arbiter.\n * @param {Array} bindings - An array containing Binding objects\n * that associate the element to an event handler.\n * @param {Object} event - The event emitted from the window.\n * @param {Object} state - The state object of the current listener.\n * @return {Object | null} - Returns an object containing a binding and\n * metadata, or null if a gesture will not be emitted.\n */\nfunction interpreter(bindings, event, state) {\n    const evType = util.normalizeEvent[event.type];\n    const events = state.inputs.map(input => input.current);\n    const candidates = bindings.reduce((accumulator, binding) => {\n        const data = binding.gesture[evType](state.inputs, state, binding.element);\n        if (data)\n            accumulator.push({ binding, data, events });\n        return accumulator;\n    }, []);\n    return candidates;\n}\nexport default interpreter;\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA,OAAOA,IAAI;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASC,WAAWA,CAACC,QAAQ,EAAEC,KAAK,EAAEC,KAAK,EAAE;EACzC,MAAMC,MAAM,GAAGL,IAAI,CAACM,cAAc,CAACH,KAAK,CAACI,IAAI,CAAC;EAC9C,MAAMC,MAAM,GAAGJ,KAAK,CAACK,MAAM,CAACC,GAAG,CAAC,CAAAC,KAAK,KAAIA,KAAK,CAACC,OAAO,CAAC;EACvD,MAAMC,UAAU,GAAGX,QAAQ,CAACY,MAAM,CAAC,CAACC,WAAW,EAAEC,OAAO,KAAK;IACzD,MAAMC,IAAI,GAAGD,OAAO,CAACE,OAAO,CAACb,MAAM,CAAC,CAACD,KAAK,CAACK,MAAM,EAAEL,KAAK,EAAEY,OAAO,CAACG,OAAO,CAAC;IAC1E,IAAIF,IAAI;IACJF,WAAW,CAACK,IAAI,CAAC,EAAEJ,OAAO,EAAEC,IAAI,EAAET,MAAM,CAAC,CAAC,CAAC;IAC/C,OAAOO,WAAW;EACtB,CAAC,EAAE,EAAE,CAAC;EACN,OAAOF,UAAU;AACrB;AACA,eAAeZ,WAAW","ignoreList":[]}