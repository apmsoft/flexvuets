{"version":3,"file":"Input.js","names":["ZingEvent","Input","constructor","event","identifier","currentEvent","initial","current","previous","progress","update","touchIdentifier","getGestureProgress","id","getCurrentEventType","type","resetProgress"],"sources":["Input.js"],"sourcesContent":["/**\n * @file Input.js\n */\nimport ZingEvent from './ZingEvent.js';\n/**\n * Tracks a single input and contains information about the\n * current, previous, and initial events.\n * Contains the progress of each Input and it's associated gestures.\n * @class Input\n */\nclass Input {\n    /**\n     * Constructor function for the Input class.\n     * @param {Event} event - The Event object from the window\n     * @param {Number} [identifier=0] - The identifier for each input event\n     * (taken from event.changedTouches)\n     */\n    constructor(event, identifier) {\n        let currentEvent = new ZingEvent(event, identifier);\n        /**\n         * Holds the initial event object. A touchstart/mousedown event.\n         * @type {ZingEvent}\n         */\n        this.initial = currentEvent;\n        /**\n         * Holds the most current event for this Input, disregarding any other past,\n         * current, and future events that other Inputs participate in.\n         * e.g. This event ended in an 'end' event, but another Input is still\n         * participating in events -- this will not be updated in such cases.\n         * @type {ZingEvent}\n         */\n        this.current = currentEvent;\n        /**\n         * Holds the previous event that took place.\n         * @type {ZingEvent}\n         */\n        this.previous = currentEvent;\n        /**\n         * Refers to the event.touches index, or 0 if a simple mouse event occurred.\n         * @type {Number}\n         */\n        this.identifier = (typeof identifier !== 'undefined') ? identifier : 0;\n        /**\n         * Stores internal state between events for\n         * each gesture based off of the gesture's id.\n         * @type {Object}\n         */\n        this.progress = {};\n    }\n    /**\n     * Receives an input, updates the internal state of what the input has done.\n     * @param {Event} event - The event object to wrap with a ZingEvent.\n     * @param {Number} touchIdentifier - The index of inputs, from event.touches\n     */\n    update(event, touchIdentifier) {\n        this.previous = this.current;\n        this.current = new ZingEvent(event, touchIdentifier);\n    }\n    /**\n     * Returns the progress of the specified gesture.\n     * @param {String} id - The identifier for each unique Gesture's progress.\n     * @return {Object} - The progress of the gesture.\n     * Creates an empty object if no progress has begun.\n     */\n    getGestureProgress(id) {\n        if (!this.progress[id]) {\n            this.progress[id] = {};\n        }\n        return this.progress[id];\n    }\n    /**\n     * Returns the normalized current Event's type.\n     * @return {String} The current event's type ( start | move | end )\n     */\n    getCurrentEventType() {\n        return this.current.type;\n    }\n    /**\n     * Resets a progress/state object of the specified gesture.\n     * @param {String} id - The identifier of the specified gesture\n     */\n    resetProgress(id) {\n        this.progress[id] = {};\n    }\n}\nexport default Input;\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,SAAS;AAChB;AACA;AACA;AACA;AACA;AACA;AACA,MAAMC,KAAK,CAAC;EACR;AACJ;AACA;AACA;AACA;AACA;EACIC,WAAWA,CAACC,KAAK,EAAEC,UAAU,EAAE;IAC3B,IAAIC,YAAY,GAAG,IAAIL,SAAS,CAACG,KAAK,EAAEC,UAAU,CAAC;IACnD;AACR;AACA;AACA;IACQ,IAAI,CAACE,OAAO,GAAGD,YAAY;IAC3B;AACR;AACA;AACA;AACA;AACA;AACA;IACQ,IAAI,CAACE,OAAO,GAAGF,YAAY;IAC3B;AACR;AACA;AACA;IACQ,IAAI,CAACG,QAAQ,GAAGH,YAAY;IAC5B;AACR;AACA;AACA;IACQ,IAAI,CAACD,UAAU,GAAI,OAAOA,UAAU,KAAK,WAAW,GAAIA,UAAU,GAAG,CAAC;IACtE;AACR;AACA;AACA;AACA;IACQ,IAAI,CAACK,QAAQ,GAAG,CAAC,CAAC;EACtB;EACA;AACJ;AACA;AACA;AACA;EACIC,MAAMA,CAACP,KAAK,EAAEQ,eAAe,EAAE;IAC3B,IAAI,CAACH,QAAQ,GAAG,IAAI,CAACD,OAAO;IAC5B,IAAI,CAACA,OAAO,GAAG,IAAIP,SAAS,CAACG,KAAK,EAAEQ,eAAe,CAAC;EACxD;EACA;AACJ;AACA;AACA;AACA;AACA;EACIC,kBAAkBA,CAACC,EAAE,EAAE;IACnB,IAAI,CAAC,IAAI,CAACJ,QAAQ,CAACI,EAAE,CAAC,EAAE;MACpB,IAAI,CAACJ,QAAQ,CAACI,EAAE,CAAC,GAAG,CAAC,CAAC;IAC1B;IACA,OAAO,IAAI,CAACJ,QAAQ,CAACI,EAAE,CAAC;EAC5B;EACA;AACJ;AACA;AACA;EACIC,mBAAmBA,CAAA,EAAG;IAClB,OAAO,IAAI,CAACP,OAAO,CAACQ,IAAI;EAC5B;EACA;AACJ;AACA;AACA;EACIC,aAAaA,CAACH,EAAE,EAAE;IACd,IAAI,CAACJ,QAAQ,CAACI,EAAE,CAAC,GAAG,CAAC,CAAC;EAC1B;AACJ;AACA,eAAeZ,KAAK","ignoreList":[]}